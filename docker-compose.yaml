version: '3.3'

services:
#################################
#####    APLICAÇÃO WEB   ########
#################################
  # app:
  #   container_name: app
  #   restart: always
  #   build: ./app/
  #   ports:
  #     - '3000':'3000'
  #   links:
  #     - mongo  
  #   depends_on:
  #     - mongo
  #   command: npm start  



#################################
####  SISTEMAS OPERACIONAIS  ####
#################################
  #------------#
  #   UBUNTU   #
  #------------#
  creci_es_ubuntu:
    container_name: ubuntu_creci_es
    # env_file: ./creci_es:.env
    image: ubuntu:16.04
    restart: always
    #build: .
    networks:
      - creci_net_default
      # creci_net_1:
      #   ipv4_address: 192.168.0.2
    ports:
      - "8080:80"
    command: "echo 'Welcome to CRECI-ES'"
    volumes:
      - .:/usr/creci_es
    links:
      - mongo
      - redis
      - nginx
      - mysqlserv
  #------------#
  #   PARROT   #
  #------------#
  creci_es_parrot:
    container_name: parro_creci_es
    # env_file: ./creci_es:.env
    image: parrotsec/parrot-core:4.6
    #build:
    # context: .
    #  dockerfile: Dockerfile-alternative
    #  args:
    #    buildno: 1
    #network_mode: "bridge"
    networks:
      - creci_net_default
      # creci_net_1:
      #   ipv4_address: 192.168.0.3
    ports:
      - "8080:80"
    volumes:
      - .:/usr/creci_es
    command: echo 'Welcome to CRECI-ES!'
    links:
      - mongo
      - redis
      - mysqlserv  
  #------------#
  #    TASKS   #
  #------------#    
  tasks:
    container_name: tarefas_automatizadas
    build: .
    command: npm run test
    volumes:
      - .:/usr/creci_es
#################################
########  SERVIDORES WEB ########
#################################
  #------------#
  #    NGINX   #
  #------------#
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - creci_net_default

#################################
#######  BANCO DE DADOS  ########
#################################
  #------------#
  #    MYSQL   #
  #------------#
  mysqlserv:
    image: mysql:5.7
    container_name: mysqlserv
    environment:
      # Credenciais para o MySQL Server
      MYSQL_USER: "crecies"
      MYSQL_PASSWORD: "creci123creci"
      MYSQL_ROOT_PASSWORD: "creci123creci"
      MYSQL_DATABASE: "creci_es"
    ports:
      # Porta exposta:MySQL porta sendo executada dentro do container
      - '3306:3306'
    expose:
      # Abra a porta 3306 do container
      - '3306'
      # Local dos dados que serão persistidos
    volumes:
      - ./data:/var/lib/mysql
  #------------#
  #    MONGO   #
  #------------#
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./data:/mongo/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: crecies
      MONGO_INITDB_ROOT_PASSWORD: creci123creci

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: crecies
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123admin
  
  #------------#
  #    REDIS   #
  #------------#
  redis:
    container_name: redis
    image: redis:alpine
    deploy:
      replicas: 6
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    volumes:
      - ./data:/redis/db
    ports:
      - "6379:6379"
  #---------------#
  #    POSTGRES   #
  #---------------#    

#############################
###########  SGBDS ##########
#############################
  #------------#
  # PHPMYADMIN #
  #------------#
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    links:
      - mysqlserv
    ports:
      - 80:80
    environment:
      - PMA_ARBITRARY=1
    expose:
      - '8080'
  #------------#
  #  ADMINER   #
  #------------#    
  adminer:
    image: adminer
    container_name: adminer
    links:
      - mysqlserv
    ports:
      - 8181:8080
    #expose:
    #  - '8282'
    networks:
      - creci_net_default
############################
#######     CMS     ########
############################      
  #------------#
  #  WORDPRESS #
  #------------#    
  wordpress:
    depends_on:
      - mysqlserv
    image: wordpress:5.1.1-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    # env_file: .env
    environment:
      WORDPRESS_DB_HOST: crecies
      WORDPRESS_DB_USER: crecies
      WORDPRESS_DB_PASSWORD: creci123creci
      WORDPRESS_DB_NAME: crecies_db
    volumes:
      - wordpress:/var/www/html  
    networks:
      - creci_net_default
    links:
      - mysqlserv
    ports:
      - 8080:80
  #-------------------#
  #  WEB SERVER P/ WP #
  #-------------------#    
  webserver_wp:
    depends_on:
      - wordpress
    image: nginx:1.15.12-alpine
    container_name: webserver_wp
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot:/etc/letsencrypt
    networks:
      - creci_net_default    
    
#################################
#########  NETWORKS   ###########
#################################
networks:
  # creci_net_1:
  #   driver: bridge
  #   ipam:
  #     driver: default
  #     config:
  #       - subnet: 192.168.0.0/24
  #       - gateway: 192.168.0.1

  # creci_net_2:
  #   driver: bridge
  #   ipam:
  #     driver: default
  #     config:
  #       - subnet: 172.16.0.0/24
  #       - gateway: 172.16.0.1

  creci_net_default:
    driver: bridge

#################################
#########  SEGURANÇA   ###########
#################################
  # certbot:
  #   depends_on:
  #     - nginx
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot:/etc/letsencrypt
  #     - wordpress:/var/www/html
  #   command: certonly --webroot --webroot-path=/var/www/html --email sammy@example.com --agree-tos --no-eff-email --staging -d example.com -d www.example.com  

#################################
#########  VOLUMES    ###########
#################################
volumes:
  certbot:
  wordpress:
  db:  
    #creci_es/rhel:
    #  container_name: creci_es_rhel
    #  build: .
    #  ports:
    #    - "8080:80"
    #  command: npm run start
        